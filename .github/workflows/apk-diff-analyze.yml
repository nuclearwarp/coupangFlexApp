name: APK Diff Analyze

on:
  workflow_dispatch:
    inputs:
      base_tag:
        description: "Base tag (e.g., decoded-2.0.56)"
        required: true
      head_tag:
        description: "Head tag (e.g., decoded-2.0.64)"
        required: true
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  maybe-run:
    runs-on: ubuntu-latest
    steps:
      - name: Decide if /analyze comment
        id: gate
        if: github.event_name == 'issue_comment'
        run: |
          body="${{ github.event.comment.body }}"
          if [[ "$body" =~ ^/analyze[[:space:]]+([^[:space:]]+)\.\.\.([^[:space:]]+) ]]; then
            echo "run=true" >> $GITHUB_OUTPUT
            echo "base_tag=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "head_tag=${BASH_REMATCH[2]}" >> $GITHUB_OUTPUT
          else
            echo "run=false" >> $GITHUB_OUTPUT
          fi
      - name: Call child job
        if: steps.gate.outputs.run == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: APK Diff Analyze
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref }}
          inputs: |
            base_tag: ${{ steps.gate.outputs.base_tag }}
            head_tag: ${{ steps.gate.outputs.head_tag }}

  analyze:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set vars
        id: vars
        run: |
          echo "BASE=${{ github.event.inputs.base_tag }}" >> $GITHUB_OUTPUT
          echo "HEAD=${{ github.event.inputs.head_tag }}" >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pygments==2.18.0

      - name: Run analyzer
        run: |
          python .github/tools/diff_analyzer.py \
            --base "${{ steps.vars.outputs.BASE }}" \
            --head "${{ steps.vars.outputs.HEAD }}" \
            --root apk_diffs \
            --out out/report

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-diff-${{ steps.vars.outputs.BASE }}...${{ steps.vars.outputs.HEAD }}
          path: out/report

      - name: Publish to Pages (gh-pages)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: out/report
          destination_dir: reports/${{ steps.vars.outputs.BASE }}-vs-${{ steps.vars.outputs.HEAD }}
          keep_files: true

      - name: Comment summary
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const base = process.env.BASE = '${{ steps.vars.outputs.BASE }}';
            const head = process.env.HEAD = '${{ steps.vars.outputs.HEAD }}';
            const summary = fs.readFileSync('out/report/summary.md','utf8');
            const url = `https://${context.repo.owner}.github.io/${context.repo.repo}/reports/${base}-vs-${head}/index.html`;
            const body = summary + `\n\n**Full HTML report:** ${url}`;
            // 댓글 이벤트에서 시작한게 아니면 notice로만 남김
            if (context.eventName === 'issue_comment') {
              await github.rest.issues.createComment({
                owner: context.repo.owner, repo: context.repo.repo,
                issue_number: context.issue.number, body
              });
            } else {
              core.notice(body);
            }
